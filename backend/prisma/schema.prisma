// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role   @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
  isDeleted Boolean @default(false)
  resetToken String? 
  resetTokenExpiry DateTime?
}

model Service {
  id        String   @id @default(cuid())
  name      String
  price     Float
  duration  Int
  bookingCount Int    @default(0)
  revenue   Float    @default(0)
  isAvailable Boolean @default(true)
  availableDays Int[] @default([0, 1, 2, 3, 4, 5, 6]) // 0 = Sunday, 1 = Monday, etc.
  availableTimeStart Int @default(9)  // 9 AM
  availableTimeEnd   Int @default(17) // 5 PM
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
}

model Appointment {
  id        String   @id @default(cuid())
  userId    String
  serviceId String
  clientId  Int?
  startTime DateTime
  endTime   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Service   Service  @relation(fields: [serviceId], references: [id])
  Client    Client?  @relation(fields: [clientId], references: [id])
  isDeleted Boolean @default(false)
  isCancelled Boolean @default(false)
  notes     String[]
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String?
  email     String?
  notes     String[] @default([])
  preferences Json?   @default("{}")
  isVip     Boolean  @default(false)
  attendanceRate Float?
  lastVisit DateTime?
  totalVisits Int     @default(0)
  totalSpent Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
  isDeleted Boolean @default(false)
}

enum Role {
  USER
  ADMIN
}